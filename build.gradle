buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = 'SpongePowered'
            url = 'http://repo.spongepowered.org/maven'
        }
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT"
        classpath "org.spongepowered:mixingradle:0.4-SNAPSHOT"
        classpath "com.github.jengelman.gradle.plugins:shadow:1.2.3"
    }
}

apply plugin: "net.minecraftforge.gradle.forge"
apply plugin: "org.spongepowered.mixin"
apply plugin: "com.github.johnrengelman.shadow"

version = modVersion
group = modGroup
archivesBaseName = modBaseName

minecraft {
    version = project.forgeVersion
    runDir = "run"
    mappings = project.mcpVersion
}

repositories {
    mavenCentral()
    maven {
        name = 'spongepowered-repo'
        url = 'http://repo.spongepowered.org/maven/'
    }
}

dependencies {
    compile("org.spongepowered:mixin:0.6.4-SNAPSHOT") {
        exclude module: "launchwrapper"
    }
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"
        expand "version": project.version, "mcversion": project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }

    rename '(.+_at.cfg)', 'META-INF/$1'
}

shadowJar {
    dependencies {
        include(dependency('org.spongepowered:mixin'))
    }

    exclude 'dummyThing'
    exclude 'LICENSE.txt'
    classifier = 'full'
}

mixin {
    add sourceSets.main, "mixin.globalcapes.json"
}

reobf {
    shadowJar {
        mappingType = 'SEARGE'
        classpath = sourceSets.main.compileClasspath
    }
}

build.dependsOn(shadowJar)

jar {
    manifest {
        attributes(
                "MixinConfigs": 'mixin.mcwrapper.json',
                "tweakClass": 'org.spongepowered.asm.launch.MixinTweaker',
                "TweakOrder": 0,
                'FMLCorePluginContainsFMLMod': 'uk.co.hexeption.capeapi.MixinLoader',
                'FMLAT': 'capeapi_at.cfg')
    }
}


